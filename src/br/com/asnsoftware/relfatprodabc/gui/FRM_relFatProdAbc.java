package br.com.asnsoftware.relfatprodabc.gui;

import br.com.asnsoftware.relfatprodabc.service.RelatorioFaturamentoService;
import br.com.asnsoftware.relfatprodabc.pojo.ItemFaturamento;
import br.com.asnsoftware.relfatprodabc.pojo.RelatorioFaturamento;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 * Frame de RELATÓRIO DE FATURAMENTO.
 * 
 */
public class FRM_relFatProdAbc extends javax.swing.JFrame {
    
    /**
     * Construtor do FRM_relFatProdAbc. <br/> <br/>
     * 
     * - Inicializa os componentes do FRM_relFatProdAbc; <br/>
     * - Centraliza o FRM_relFatProdAbc no meio da tela.
     */
    public FRM_relFatProdAbc() {
        initComponents();
        
        setLocationRelativeTo(null);
    }
    
    /**
     * Carrega a tabela TB_itensFaturamento. <br/> <br/>
     * 
     * - Insere o Table Model ItemFaturamentoTableModel; <br/>
     * - Esecifica propriedades visuais (tamanho das colunas); <br/>
     * - Adiciona os itens (objetos do tipo ItemFaturamento) da lista recebida como parâmetro. <br/> <br/>
     * 
     * Obs.: a implementação do Table Model ItemFaturamentoTableModel formata os valores monetários e
     * percentuais dos itens inseridos.
     * 
     * @param listaItensFaturamento 
     */
    private void carregarTabela(List<ItemFaturamento> listaItensFaturamento) {
        ItemFaturamentoTableModel itemFaturamentoTbModel = new ItemFaturamentoTableModel();
        TB_itensFaturamento.setModel(itemFaturamentoTbModel);
        
        TB_itensFaturamento.getColumnModel().getColumn(0).setPreferredWidth(60);
        TB_itensFaturamento.getColumnModel().getColumn(1).setPreferredWidth(252);
        TB_itensFaturamento.getColumnModel().getColumn(2).setPreferredWidth(130);
        TB_itensFaturamento.getColumnModel().getColumn(3).setPreferredWidth(150);
        TB_itensFaturamento.getColumnModel().getColumn(4).setPreferredWidth(45);
        
        listaItensFaturamento.forEach((itemFaturamento) -> itemFaturamentoTbModel.addItem(itemFaturamento));
    }
    
    /**
     * Validação dos campos necessários (DATA INICIAL e DATA FINAL) para gerar o relatório.
     * 
     * @return 
     */
    private boolean validarCampos() {
        return !(DT_dataInicial.getDate() == null || DT_dataFinal.getDate() == null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PNL_principal = new javax.swing.JPanel();
        PNL_campos = new javax.swing.JPanel();
        DT_dataFinal = new com.toedter.calendar.JDateChooser();
        BT_gerar = new javax.swing.JButton();
        DT_dataInicial = new com.toedter.calendar.JDateChooser();
        LB_dataInicial = new javax.swing.JLabel();
        LB_dataFinal = new javax.swing.JLabel();
        PNL_titulo = new javax.swing.JPanel();
        LB_titulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TB_itensFaturamento = new javax.swing.JTable();
        LB_faturamentoGeral = new javax.swing.JLabel();
        TXT_faturamentoGeral = new javax.swing.JTextField();
        TXT_percentualAcumCurvaA = new javax.swing.JTextField();
        LB_percentualAcumCurvaA = new javax.swing.JLabel();
        LB_percentualAcumCurvaB = new javax.swing.JLabel();
        TXT_percentualAcumCurvaB = new javax.swing.JTextField();
        LB_percentualAcumCurvaC = new javax.swing.JLabel();
        TXT_percentualAcumCurvaC = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PNL_principal.setBackground(new java.awt.Color(255, 255, 255));

        PNL_campos.setBackground(new java.awt.Color(204, 204, 204));

        DT_dataFinal.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        BT_gerar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        BT_gerar.setText("GERAR");
        BT_gerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_gerarActionPerformed(evt);
            }
        });

        DT_dataInicial.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        LB_dataInicial.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        LB_dataInicial.setText("Data inicial:");

        LB_dataFinal.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        LB_dataFinal.setText("Data final:");

        javax.swing.GroupLayout PNL_camposLayout = new javax.swing.GroupLayout(PNL_campos);
        PNL_campos.setLayout(PNL_camposLayout);
        PNL_camposLayout.setHorizontalGroup(
            PNL_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNL_camposLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LB_dataInicial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DT_dataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LB_dataFinal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DT_dataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BT_gerar)
                .addContainerGap())
        );
        PNL_camposLayout.setVerticalGroup(
            PNL_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNL_camposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PNL_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PNL_camposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(DT_dataInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                        .addComponent(DT_dataFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LB_dataInicial, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LB_dataFinal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(BT_gerar))
                .addContainerGap())
        );

        PNL_titulo.setBackground(new java.awt.Color(255, 153, 0));

        LB_titulo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        LB_titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LB_titulo.setText("RELATÓRIO DE FATURAMENTO - CURVA ABC");

        javax.swing.GroupLayout PNL_tituloLayout = new javax.swing.GroupLayout(PNL_titulo);
        PNL_titulo.setLayout(PNL_tituloLayout);
        PNL_tituloLayout.setHorizontalGroup(
            PNL_tituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LB_titulo, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE)
        );
        PNL_tituloLayout.setVerticalGroup(
            PNL_tituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LB_titulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(TB_itensFaturamento);

        LB_faturamentoGeral.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        LB_faturamentoGeral.setText("Faturamento geral:");

        TXT_faturamentoGeral.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TXT_faturamentoGeral.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        TXT_faturamentoGeral.setEnabled(false);

        TXT_percentualAcumCurvaA.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TXT_percentualAcumCurvaA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        TXT_percentualAcumCurvaA.setEnabled(false);

        LB_percentualAcumCurvaA.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        LB_percentualAcumCurvaA.setText("Percentual acumulado na curva A:");

        LB_percentualAcumCurvaB.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        LB_percentualAcumCurvaB.setText("Percentual acumulado na curva B:");

        TXT_percentualAcumCurvaB.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TXT_percentualAcumCurvaB.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        TXT_percentualAcumCurvaB.setEnabled(false);

        LB_percentualAcumCurvaC.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        LB_percentualAcumCurvaC.setText("Percentual acumulado na curva C:");

        TXT_percentualAcumCurvaC.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TXT_percentualAcumCurvaC.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        TXT_percentualAcumCurvaC.setEnabled(false);

        javax.swing.GroupLayout PNL_principalLayout = new javax.swing.GroupLayout(PNL_principal);
        PNL_principal.setLayout(PNL_principalLayout);
        PNL_principalLayout.setHorizontalGroup(
            PNL_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PNL_titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PNL_principalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PNL_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PNL_campos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PNL_principalLayout.createSequentialGroup()
                        .addGroup(PNL_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LB_percentualAcumCurvaC)
                            .addGroup(PNL_principalLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(PNL_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LB_percentualAcumCurvaB)
                                    .addComponent(LB_percentualAcumCurvaA)))
                            .addComponent(TXT_percentualAcumCurvaA, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXT_percentualAcumCurvaB, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TXT_percentualAcumCurvaC, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PNL_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LB_faturamentoGeral)
                            .addComponent(TXT_faturamentoGeral, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        PNL_principalLayout.setVerticalGroup(
            PNL_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNL_principalLayout.createSequentialGroup()
                .addComponent(PNL_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PNL_campos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PNL_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PNL_principalLayout.createSequentialGroup()
                        .addComponent(LB_faturamentoGeral)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TXT_faturamentoGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PNL_principalLayout.createSequentialGroup()
                        .addComponent(LB_percentualAcumCurvaA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TXT_percentualAcumCurvaA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(LB_percentualAcumCurvaB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TXT_percentualAcumCurvaB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(LB_percentualAcumCurvaC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TXT_percentualAcumCurvaC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PNL_principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PNL_principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Ação do botão GERAR (BT_gerar).
     * 
     * - Valida os campos necessarios através do método validarCampos(); <br/>
     * - Verifica se o intervalo especificado pelas datas inicial e final é válido; <br/>
     * - Gera o relatório, popula a tabela TB_itensFaturamento; <br/>
     * - Insere valores formatados, de acordo com os dados do relatório, nos campos FATURAMENTO GERAL,
     * PERCENTUAL ACUMULADO NA CURVA A, PERCENTUAL ACUMULADO NA CURVA B e PERCENTUAL ACUMULADO NA CURVA C.
     * 
     * @param evt 
     */
    private void BT_gerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_gerarActionPerformed
        if (!validarCampos()) {
            JOptionPane.showMessageDialog(this, "Os campos DATA INICIAL e DATA FINAL precisam ser preenchidos com valores válidos!", "Atenção!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (DT_dataInicial.getDate().after(DT_dataFinal.getDate())) {
            JOptionPane.showMessageDialog(this, "A DATA INICIAL não deve ser maior que a DATA FINAL!", "Atenção!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        DT_dataInicial.setEnabled(false);
        DT_dataFinal.setEnabled(false);
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        RelatorioFaturamento relatorioFaturamento = RelatorioFaturamentoService.gerar(sdf.format(DT_dataInicial.getDate()), sdf.format(DT_dataFinal.getDate()));
        
        carregarTabela(relatorioFaturamento.getListaItens());
        
        DT_dataInicial.setEnabled(true);
        DT_dataFinal.setEnabled(true);
        
        DecimalFormat df = new DecimalFormat("#,###,##0.00");
        
        DecimalFormatSymbols dfs = new DecimalFormatSymbols();
        dfs.setDecimalSeparator(',');
        dfs.setGroupingSeparator('.');
        
        df.setDecimalFormatSymbols(dfs);
        
        String percentualFinalA = df.format(relatorioFaturamento.getPercentualFinalA());
        String percentualFinalB = df.format(relatorioFaturamento.getPercentualFinalB().subtract(relatorioFaturamento.getPercentualFinalA()));
        String percentualFinalC = df.format(new BigDecimal("100.00").subtract(relatorioFaturamento.getPercentualFinalB()));
        
        TXT_faturamentoGeral.setText("R$ " + df.format(relatorioFaturamento.getValorGeralFaturamento()));
        TXT_percentualAcumCurvaA.setText(percentualFinalA + "%");
        TXT_percentualAcumCurvaB.setText(percentualFinalB + "%");
        TXT_percentualAcumCurvaC.setText(percentualFinalC + "%");
    }//GEN-LAST:event_BT_gerarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRM_relFatProdAbc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRM_relFatProdAbc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRM_relFatProdAbc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRM_relFatProdAbc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FRM_relFatProdAbc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_gerar;
    private com.toedter.calendar.JDateChooser DT_dataFinal;
    private com.toedter.calendar.JDateChooser DT_dataInicial;
    private javax.swing.JLabel LB_dataFinal;
    private javax.swing.JLabel LB_dataInicial;
    private javax.swing.JLabel LB_faturamentoGeral;
    private javax.swing.JLabel LB_percentualAcumCurvaA;
    private javax.swing.JLabel LB_percentualAcumCurvaB;
    private javax.swing.JLabel LB_percentualAcumCurvaC;
    private javax.swing.JLabel LB_titulo;
    private javax.swing.JPanel PNL_campos;
    private javax.swing.JPanel PNL_principal;
    private javax.swing.JPanel PNL_titulo;
    private javax.swing.JTable TB_itensFaturamento;
    private javax.swing.JTextField TXT_faturamentoGeral;
    private javax.swing.JTextField TXT_percentualAcumCurvaA;
    private javax.swing.JTextField TXT_percentualAcumCurvaB;
    private javax.swing.JTextField TXT_percentualAcumCurvaC;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
